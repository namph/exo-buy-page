<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
  <!-- ************************************************************************************************************************ -->
  <!-- The goal of this assembly is to compose the final application server distribution with : -->
  <!--   - a filtered version of the Tomcat (unziped by the assembly 1-extract-tomcat.xml) -->
  <!--      - some files are excluded because we override them (server.xml, loggin.properties, ...) -->
  <!--      - some files are added (setenv.sh, logback.xml) -->
  <!--   - some additional libraries (Tomcat JMX remote , SLF4J, Logback) -->
  <!--   - the different WARs we want to bundle -->
  <!-- ************************************************************************************************************************ -->
  <id>create-appsrv</id>
  <formats>
    <format>dir</format>
  </formats>
  <includeBaseDirectory>true</includeBaseDirectory>
  <baseDirectory>${project.build.finalName}</baseDirectory>
  <fileSets>
    <!-- Platform files -->
    <!-- Unix shell scripts with exec rights -->
    <fileSet>
      <outputDirectory>/</outputDirectory>
      <directory>${project.build.directory}/${project.build.finalName}/dependencies/apache-tomcat/apache-tomcat-${org.apache.tomcat.version}/</directory>
      <fileMode>0755</fileMode>
      <filtered>false</filtered>
      <lineEnding>keep</lineEnding>
      <includes>
        <include>**/*.sh</include>
      </includes>
    </fileSet>
    <!-- Platform files -->
    <!-- Others files -->
    <fileSet>
      <outputDirectory>/</outputDirectory>
      <directory>${project.build.directory}/${project.build.finalName}/dependencies/apache-tomcat/apache-tomcat-${org.apache.tomcat.version}/</directory>
      <directoryMode>0755</directoryMode>
      <fileMode>0644</fileMode>
      <filtered>false</filtered>
      <lineEnding>keep</lineEnding>
      <excludes>
        <exclude>**/*.sh</exclude>
        <!-- We need to exclude everything we override -->
        <exclude>**/conf/logging.properties</exclude>
        <exclude>**/LICENSE*</exclude>
        <exclude>**/NOTICE*</exclude>
        <exclude>**/RELEASE-NOTES*</exclude>
        <exclude>**/RUNNING*</exclude>
      </excludes>
    </fileSet>
    <!-- Additional resources -->
    <fileSet>
      <directory>${project.basedir}/src/main/resources/tomcat</directory>
      <outputDirectory>/</outputDirectory>
      <filtered>true</filtered>
      <includes>
        <include>**/*.sh</include>
      </includes>
      <fileMode>0755</fileMode>
    </fileSet>
    <fileSet>
      <directory>${project.basedir}/src/main/resources/tomcat</directory>
      <outputDirectory>/</outputDirectory>
      <excludes>
        <exclude>**/*.sh</exclude>
      </excludes>
      <directoryMode>0755</directoryMode>
      <fileMode>0644</fileMode>
    </fileSet>
  </fileSets>
  <dependencySets>
    <!-- ================================ -->
    <!-- Additional libraries for Tomcat  -->
    <!-- ================================ -->
    <!-- Adding Logging -->
    <dependencySet>
      <outputDirectory>/lib</outputDirectory>
      <includes>
        <!-- This artifact isn't by default in tomcat -->
        <include>org.slf4j:jcl-over-slf4j</include>
        <include>org.slf4j:jul-to-slf4j</include>
        <include>org.slf4j:log4j-over-slf4j</include>
        <include>org.slf4j:slf4j-api</include>
        <include>ch.qos.logback:logback-classic:jar</include>
        <include>ch.qos.logback:logback-core:jar</include>
      </includes>
      <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}.${artifact.extension}</outputFileNameMapping>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>
    <!-- Adding Mail -->
    <dependencySet>
      <outputDirectory>/lib</outputDirectory>
      <includes>
        <!-- This artifact isn't by default in tomcat -->
        <include>javax.mail:mail</include>
      </includes>
      <outputFileNameMapping>${artifact.artifactId}-${artifact.baseVersion}.${artifact.extension}</outputFileNameMapping>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>
    <!-- ================================ -->
    <!-- we reference each war to package -->
    <!-- ================================ -->
  
    <dependencySet>
      <includes>
        <include>com.exoplatform.buypage:buy-page-webapp:war</include>
      </includes>
      <scope>provided</scope>
      <outputDirectory>/webapps</outputDirectory>
      <outputFileNameMapping>buy.war</outputFileNameMapping>
      <useProjectArtifact>false</useProjectArtifact>
    </dependencySet>

  </dependencySets>
  <componentDescriptors>
  </componentDescriptors>
</assembly>
